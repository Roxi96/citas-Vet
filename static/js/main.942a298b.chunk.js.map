{"version":3,"sources":["components/Formulario.js","components/Cita.js","App.js","reportWebVitals.js","index.js"],"names":["Formulario","crearCita","useState","mascota","propetario","fecha","hora","sintomas","cita","actualizarCita","error","actualizarError","actualizarState","e","target","name","value","className","onSubmit","preventDefault","console","log","trim","id","uuidv4","type","place","onChange","Cita","eliminarCita","onClick","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.942a298b.chunk.js","sourcesContent":["import react, {Fragment, useState} from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({crearCita}) => {\r\n\r\n    //crear State de citas\r\n    const [cita, actualizarCita] = useState({\r\n        mascota:'',\r\n        propetario:'',\r\n        fecha: '',\r\n        hora:'',\r\n        sintomas:''\r\n    });\r\n\r\n    //segundo state\r\n    //error es el nombre del state, y la segunda parte es la funcion que la modifica\r\n    const [error, actualizarError] = useState(false)\r\n\r\n//funcion q se ejecuta cada q el usuario esbriba en un input\r\nconst actualizarState = (e) =>{\r\n    actualizarCita({\r\n        ...cita,\r\n        [e.target.name]:e.target.value\r\n    });\r\n}\r\n//extraer las fundiones\r\nconst {mascota, propetario, fecha, hora, sintomas} = cita;\r\n\r\n\r\n\r\n\r\n//cuando el usuario presionar enviar citar, o enviar formulario\r\nconst submitCita = e  =>{\r\n    e.preventDefault();\r\n    \r\n    console.log(mascota);\r\n    //validar\r\n    if(mascota.trim() === '' || propetario.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === '' ){\r\n        actualizarError(true);\r\n        return; //para que no se siga ejecutando el codigo\r\n    }\r\n\r\n    //eliminar el mensaje previo\r\n    actualizarError(false);\r\n\r\n    //asignar una id\r\n    cita.id=uuidv4();\r\n    \r\n    //crear la cita\r\n    crearCita(cita);\r\n\r\n    //reiniciar el form\r\n    actualizarCita({\r\n        mascota:'',\r\n        propetario:'',\r\n        fecha: '',\r\n        hora:'',\r\n        sintomas:''\r\n    })\r\n}\r\n    return ( \r\n        <Fragment>\r\n            <h2>Crear Cita</h2>\r\n\r\n            {error ? <p className=\"alerta-error\">Todos los cmapos son obligatorios</p> :null}\r\n\r\n            <form\r\n                onSubmit={submitCita}\r\n            >\r\n                <label>Nombre Mascota</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"mascota\"\r\n                    className=\"u-full-width\"\r\n                    place=\"Nombre del dueno de la mascota\"\r\n                    onChange={actualizarState}\r\n                    value={mascota}\r\n                />\r\n                <label>Nombre dueno</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"propetario\"\r\n                    className=\"u-full-width\"\r\n                    onChange={actualizarState}\r\n                    value={propetario}\r\n                    \r\n                />\r\n                <label>Fecha</label>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"fecha\"\r\n                    className=\"u-full-width\"\r\n                    onChange={actualizarState}\r\n                    value={fecha}\r\n                    \r\n                />\r\n                <label>Hora</label>\r\n                <input\r\n                    type=\"time\"\r\n                    name=\"hora\"\r\n                    className=\"u-full-width\"\r\n                    onChange={actualizarState}\r\n                    value={hora}\r\n                    \r\n                />\r\n                 <label>Sintomas</label>\r\n                 <textarea\r\n                 className=\"u-full-width\"\r\n                 name=\"sintomas\"\r\n                 onChange={actualizarState}\r\n                 value={sintomas}\r\n                 />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"u-full-width button-primary\"\r\n                    onChange={actualizarState}\r\n                >Agregar Cita</button>\r\n\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n Formulario.propTypes={\r\n     crearCita: PropTypes.func.isRequired\r\n }\r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Cita = ({cita, eliminarCita}) => (\r\n    <div className=\"cita\">\r\n        <p>Mascota: <span>{cita.mascota}</span></p>\r\n        <p>Due√±o: <span>{cita.propetario}</span></p>\r\n        <p>Fecha: <span>{cita.fecha}</span></p>\r\n        <p>Hora: <span>{cita.hora}</span></p>\r\n        <p>Sintomas:<span>{cita.sintomas}</span></p>\r\n\r\n        <button className=\"button eliminar u-full-width\"\r\n         onClick={()=> eliminarCita(cita.id)}\r\n        >Eliminar &times;    \r\n        </button>\r\n    </div>\r\n\r\n\r\n);\r\n \r\nCita.propTypes={\r\n    cita: PropTypes.object.isRequired,\r\n    eliminarCita:PropTypes.func.isRequired\r\n}\r\n\r\nexport default Cita;"," import React, {Fragment, useState, useEffect} from 'react';\n import Formulario from './components/Formulario';\n import Cita from './components/Cita';\n\nfunction App() {\n//citas en el local storage\nlet citasIniciales= JSON.parse(localStorage.getItem('citas'));\n//si no hay citas iniciales\nif( !citasIniciales){\n  citasIniciales=[];\n}\n\n//arreglo de citas\nconst [citas, guardarCitas]= useState(citasIniciales);\n\n//useEffect para realizar ciertas opereaciones cuando el state cambia\nuseEffect( ()=>{\n  if(citasIniciales){\n    localStorage.setItem('citas',JSON.stringify(citas))\n  }else{\n    localStorage.setItem('citas',JSON.stringify([]));\n  }\n}, [citas, citasIniciales]); //array de dependencias\n\n//funcion q tome las citas actuales y agregue la nueva\nconst crearCita = cita =>{guardarCitas([...citas,cita]);\n}\n\n//funcion que elimina una cita por su id\nconst eliminarCita = id =>{\n  const nuevasCitas = citas.filter(cita => cita.id !== id);\n  guardarCitas(nuevasCitas);\n}\n \n//mensaje condicional \nconst titulo = citas.length === 0 ? 'No hay citas' : 'Administra tus citas.'\n  return (\n   <Fragment>\n      <h1>Administrador de pacientes</h1>\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"one-half column\">\n          <Formulario\n          crearCita={crearCita}\n          />\n        </div>\n        <div className=\"one-half column\">\n          <h2>{titulo}</h2>\n          {citas.map(cita => (\n            <Cita \n            key={cita.id}\n            cita={cita}\n            eliminarCita={eliminarCita}\n            />\n          ))}\n        </div>\n\n      </div>\n    </div>\n   </Fragment>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}